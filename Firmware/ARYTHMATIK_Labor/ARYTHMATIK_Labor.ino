#include "src/libmodulove/arythmatik.h"
#include <avr/pgmspace.h>
#include <FastGPIO.h>

// Configuration flags
//#define ENCODER_REVERSED
//#define ROTATE_PANEL
//#define DISABLE_BOOT_LOGO

#ifdef ROTATE_PANEL
// When panel is rotated
#define RESET FastGPIO::Pin<13>
#define CLK FastGPIO::Pin<11>
#define OUTPUT1 FastGPIO::Pin<8>
#define OUTPUT2 FastGPIO::Pin<9>
#define OUTPUT3 FastGPIO::Pin<10>
#define OUTPUT4 FastGPIO::Pin<5>
#define OUTPUT5 FastGPIO::Pin<6>
#define OUTPUT6 FastGPIO::Pin<7>
#define LED1 FastGPIO::Pin<0>
#define LED2 FastGPIO::Pin<1>
#define LED3 FastGPIO::Pin<17>
#define LED4 FastGPIO::Pin<14>
#define LED5 FastGPIO::Pin<15>
#define LED6 FastGPIO::Pin<16>
#else
// When panel is not rotated
#define RESET FastGPIO::Pin<11>
#define CLK FastGPIO::Pin<13>
#define OUTPUT1 FastGPIO::Pin<5>
#define OUTPUT2 FastGPIO::Pin<6>
#define OUTPUT3 FastGPIO::Pin<7>
#define OUTPUT4 FastGPIO::Pin<8>
#define OUTPUT5 FastGPIO::Pin<9>
#define OUTPUT6 FastGPIO::Pin<10>
#define LED1 FastGPIO::Pin<14>
#define LED2 FastGPIO::Pin<15>
#define LED3 FastGPIO::Pin<16>
#define LED4 FastGPIO::Pin<0>
#define LED5 FastGPIO::Pin<1>
#define LED6 FastGPIO::Pin<17>
#endif
#define CLK_LED FastGPIO::Pin<4>

using namespace modulove;
using namespace arythmatik;

Arythmatik hw;

int framecount1 = 0;
int framecount2 = 3;  // Offset the second animation by 3 frames
int hammerCycle = 0;          // Track the number of cycles
bool hammerState = false;
unsigned long lastClockTime = 0;
bool useInternalClock = false;
bool toggleState = false;   // Track the toggle state

// 'frame_00_delay-0', 46x60px
const unsigned char labour00 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0c, 0x00, 
	0x00, 0x0e, 0x00, 0x01, 0x1e, 0x00, 0x00, 0x1e, 0x00, 0x01, 0xbf, 0x00, 0x00, 0x7c, 0x00, 0x01, 
	0xff, 0x80, 0x01, 0xfc, 0x00, 0x01, 0xff, 0x80, 0x03, 0xfc, 0x00, 0x01, 0xff, 0x80, 0x07, 0xfc, 
	0x00, 0x01, 0xff, 0xc0, 0x0f, 0xfc, 0x00, 0x01, 0xfd, 0xc0, 0x0f, 0xec, 0x00, 0x01, 0xfd, 0xc0, 
	0x0f, 0xec, 0x00, 0x01, 0xfc, 0xc0, 0x0f, 0xee, 0x00, 0x01, 0xfc, 0xc0, 0x0f, 0xee, 0x00, 0x01, 
	0xfd, 0xc0, 0x0f, 0xe7, 0x00, 0x01, 0xf9, 0xc0, 0x0f, 0xe7, 0x00, 0x00, 0xf9, 0x80, 0x1f, 0xe1, 
	0x80, 0x00, 0x01, 0x00, 0x3f, 0xe0, 0x80, 0x10, 0x03, 0x00, 0x3f, 0xf0, 0x40, 0x10, 0x07, 0x00, 
	0x3f, 0xfc, 0xf3, 0x02, 0x0f, 0x00, 0x3f, 0xc7, 0x38, 0x02, 0x07, 0x00, 0x3f, 0xc0, 0x00, 0x0b, 
	0x07, 0x00, 0x1f, 0xc0, 0x00, 0x03, 0x07, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x0f, 0x00, 0x07, 0xe0, 
	0x00, 0x00, 0x8f, 0x00, 0x07, 0xe0, 0x00, 0x01, 0x8e, 0x00, 0x07, 0xe0, 0x00, 0x01, 0x06, 0x00, 
	0x03, 0xe0, 0x00, 0x06, 0x06, 0x00, 0x01, 0xe0, 0x00, 0x03, 0x02, 0x00, 0x01, 0xe0, 0x00, 0x07, 
	0x43, 0x00, 0x01, 0xe0, 0x00, 0x07, 0xe3, 0x00, 0x01, 0xe0, 0x00, 0x0f, 0xe3, 0x00, 0x01, 0xc0, 
	0x00, 0x0f, 0xa3, 0x00, 0x03, 0xc0, 0x00, 0x0f, 0xa3, 0x00, 0x03, 0xc0, 0x00, 0x0f, 0xa3, 0x00, 
	0x03, 0xc0, 0x00, 0x0f, 0x81, 0x00, 0x03, 0xc0, 0x00, 0x0f, 0x81, 0x00, 0x03, 0xc0, 0x00, 0x0f, 
	0xa1, 0x00, 0x03, 0xc0, 0x00, 0x0f, 0xe3, 0x00, 0x03, 0xe0, 0x00, 0x0f, 0xf3, 0x80, 0x07, 0xe0, 
	0x00, 0x0f, 0xf3, 0x80, 0xff, 0xff, 0xd8, 0x0f, 0x93, 0x80, 0xff, 0xff, 0xfc, 0x0f, 0xff, 0xfc, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdc
};
// 'frame_01_delay-0', 46x60px
const unsigned char labour01 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x3c, 0x00, 0x00, 0x00, 0x04, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x0f, 0x08, 0x00, 
	0x00, 0x3c, 0x00, 0x01, 0x0e, 0x00, 0x00, 0xfc, 0x00, 0x01, 0x9f, 0x00, 0x01, 0xfc, 0x00, 0x01, 
	0xff, 0x80, 0x07, 0xfc, 0x00, 0x01, 0xff, 0x80, 0x07, 0xfc, 0x00, 0x01, 0xff, 0xc0, 0x0f, 0xfc, 
	0x00, 0x01, 0xff, 0xc0, 0x0f, 0xfc, 0x00, 0x01, 0xfd, 0xc0, 0x0f, 0xfc, 0x00, 0x01, 0xfd, 0xc0, 
	0x0f, 0xec, 0x00, 0x01, 0xfc, 0xc0, 0x0f, 0xee, 0x00, 0x01, 0xfc, 0xe0, 0x0f, 0xee, 0x00, 0x00, 
	0xfd, 0xe0, 0x0f, 0xef, 0x00, 0x00, 0xfd, 0xc0, 0x1f, 0xe7, 0x80, 0x00, 0xf9, 0xc0, 0x1f, 0xe1, 
	0xc0, 0x00, 0x01, 0x80, 0x3f, 0xf0, 0xf8, 0x00, 0x03, 0x00, 0x3f, 0xfe, 0x70, 0x00, 0x03, 0x00, 
	0x3f, 0xc0, 0x00, 0x00, 0x0f, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x07, 0x00, 0x3f, 0xe0, 0x00, 0x00, 
	0x03, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x07, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x0f, 0x00, 0x07, 0xe0, 
	0x00, 0x00, 0x0f, 0x00, 0x07, 0xe0, 0x00, 0x01, 0x0f, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x06, 0x00, 
	0x03, 0xc0, 0x00, 0x06, 0x06, 0x00, 0x03, 0xe0, 0x00, 0x03, 0x03, 0x00, 0x01, 0xe0, 0x00, 0x07, 
	0x03, 0x00, 0x01, 0xe0, 0x00, 0x07, 0xe3, 0x00, 0x01, 0xe0, 0x00, 0x0f, 0xe3, 0x00, 0x01, 0xc0, 
	0x00, 0x0f, 0xa3, 0x00, 0x03, 0xc0, 0x00, 0x0f, 0xa1, 0x00, 0x03, 0xc0, 0x00, 0x0f, 0xa1, 0x00, 
	0x03, 0xc0, 0x00, 0x0f, 0x81, 0x00, 0x03, 0xc0, 0x00, 0x0f, 0x81, 0x00, 0x03, 0xc0, 0x00, 0x0f, 
	0xa1, 0x00, 0x03, 0x40, 0x00, 0x0f, 0xa1, 0x00, 0x01, 0x60, 0x00, 0x0f, 0xf1, 0x80, 0x03, 0x60, 
	0x00, 0x0f, 0xf3, 0x80, 0xfb, 0xfe, 0x00, 0x0f, 0x83, 0x80, 0xfb, 0xff, 0x98, 0x0f, 0x83, 0x84, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xd8, 0x0c
};
// 'frame_02_delay-0', 46x60px
const unsigned char labour02 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x0c, 
	0x00, 0x30, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x30, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x7f, 0x80, 0x00, 
	0x00, 0xfc, 0x00, 0x7f, 0x86, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x87, 0x80, 0x03, 0xf8, 0x00, 0x00, 
	0x8f, 0x80, 0x07, 0xf8, 0x00, 0x00, 0xff, 0xc0, 0x07, 0xf8, 0x00, 0x00, 0xff, 0xc0, 0x0f, 0xf8, 
	0x00, 0x00, 0xff, 0xe0, 0x0f, 0xfc, 0x00, 0x00, 0xfe, 0xe0, 0x0f, 0xdc, 0x00, 0x00, 0xfc, 0xe0, 
	0x0f, 0xfc, 0x00, 0x00, 0xfe, 0xe0, 0x0f, 0xee, 0x00, 0x00, 0xfe, 0x60, 0x0f, 0xff, 0x00, 0x00, 
	0x7e, 0x60, 0x0f, 0xf7, 0x80, 0x00, 0x7e, 0xe0, 0x0f, 0xf1, 0xe4, 0x00, 0x7c, 0xe0, 0x1f, 0xf8, 
	0xf8, 0x00, 0x18, 0xc0, 0x1f, 0xfe, 0x30, 0x00, 0x01, 0x80, 0x1f, 0xe0, 0x00, 0x00, 0x01, 0x80, 
	0x1f, 0xe0, 0x00, 0x00, 0x07, 0x80, 0x1f, 0xe0, 0x00, 0x00, 0x07, 0x80, 0x1f, 0xe0, 0x00, 0x01, 
	0x03, 0x80, 0x07, 0xe0, 0x00, 0x01, 0x83, 0x80, 0x07, 0xe0, 0x00, 0x00, 0x03, 0x80, 0x07, 0xe0, 
	0x00, 0x00, 0x83, 0x00, 0x07, 0xe0, 0x00, 0x01, 0x87, 0x00, 0x03, 0xe0, 0x00, 0x01, 0x07, 0x00, 
	0x03, 0xc0, 0x00, 0x02, 0x03, 0x00, 0x01, 0xe0, 0x00, 0x03, 0x03, 0x00, 0x01, 0xe0, 0x00, 0x02, 
	0x01, 0x00, 0x01, 0xe0, 0x00, 0x03, 0xe1, 0x80, 0x01, 0xc0, 0x00, 0x07, 0xe1, 0x80, 0x03, 0xc0, 
	0x00, 0x0f, 0xe1, 0x80, 0x03, 0xc0, 0x00, 0x0f, 0xa1, 0x80, 0x03, 0xc0, 0x00, 0x0f, 0xa1, 0x80, 
	0x03, 0xc0, 0x00, 0x0f, 0x81, 0x80, 0x03, 0xc0, 0x00, 0x0f, 0x81, 0x80, 0x03, 0xc0, 0x00, 0x0f, 
	0xa1, 0x80, 0x07, 0x40, 0x00, 0x0f, 0xb1, 0x80, 0x03, 0x60, 0x00, 0x0f, 0xf1, 0x80, 0x03, 0x60, 
	0x00, 0x0f, 0xf1, 0x80, 0xf3, 0xfe, 0x00, 0x0f, 0x83, 0x80, 0xfb, 0xff, 0xdc, 0x0f, 0xf9, 0x80, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x1c
};
// 'frame_04_delay-0', 46x60px
const unsigned char labour04 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 
	0x01, 0xc0, 0x00, 0x00, 0x04, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x8f, 0x00, 0x07, 0xe0, 0x00, 0x03, 
	0x8f, 0x80, 0x0f, 0xe0, 0x00, 0x03, 0xdf, 0xc0, 0x0f, 0xe0, 0x00, 0x07, 0xff, 0xc0, 0x1f, 0xf0, 
	0x00, 0x07, 0xff, 0xc0, 0x1e, 0xf0, 0x00, 0x07, 0xff, 0xe0, 0x1f, 0xf0, 0x00, 0x06, 0xfe, 0xe0, 
	0x1e, 0xe0, 0x00, 0x0c, 0x78, 0xe0, 0x1e, 0x60, 0x00, 0x0c, 0x7e, 0xe0, 0x0e, 0x70, 0x00, 0x08, 
	0x7e, 0xe0, 0x0e, 0x78, 0x00, 0x08, 0x3c, 0xe0, 0x1e, 0xfc, 0x00, 0x0c, 0x1c, 0xe0, 0x1e, 0xdc, 
	0x00, 0x08, 0x01, 0xc0, 0x3f, 0xc3, 0x00, 0x0c, 0x01, 0x80, 0x3f, 0xc0, 0xc0, 0x0c, 0x03, 0x00, 
	0x3f, 0x80, 0x20, 0x08, 0x07, 0x80, 0x3f, 0x80, 0x00, 0x00, 0x0f, 0x80, 0x1f, 0x80, 0x00, 0x00, 
	0x03, 0x80, 0x0f, 0x80, 0x00, 0x00, 0x03, 0x80, 0x07, 0x80, 0x00, 0x00, 0x03, 0x80, 0x0f, 0x80, 
	0x00, 0x00, 0x03, 0x80, 0x0f, 0xc0, 0x00, 0x00, 0x03, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x03, 0x00, 
	0x07, 0xc0, 0x00, 0x06, 0x03, 0x00, 0x01, 0xe0, 0x00, 0x02, 0x03, 0x00, 0x01, 0xe0, 0x00, 0x02, 
	0x01, 0x00, 0x01, 0xc0, 0x00, 0x06, 0x81, 0x00, 0x01, 0xc0, 0x00, 0x0f, 0xa1, 0x80, 0x03, 0xc0, 
	0x00, 0x0f, 0xa1, 0x80, 0x03, 0xc0, 0x00, 0x0f, 0xa1, 0x80, 0x03, 0xc0, 0x00, 0x0f, 0x81, 0x80, 
	0x01, 0x40, 0x00, 0x0f, 0x81, 0x00, 0x01, 0x40, 0x00, 0x0f, 0x81, 0x00, 0x01, 0x40, 0x00, 0x0f, 
	0xa1, 0x00, 0x02, 0x40, 0x00, 0x0f, 0xb1, 0x00, 0x02, 0x40, 0x00, 0x0f, 0xf1, 0x80, 0x02, 0x60, 
	0x00, 0x0f, 0xf3, 0x80, 0xf3, 0xf0, 0x00, 0x0f, 0x83, 0x80, 0xe7, 0xfc, 0x18, 0x0f, 0x83, 0x00, 
	0x07, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfc, 0x00, 0xc4, 0x8f, 0xcf, 0xf0, 0x0c
};
// 'frame_03_delay-0', 46x60px
const unsigned char labour03 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 
	0x03, 0xf0, 0x00, 0x01, 0x0c, 0x00, 0x07, 0xe0, 0x00, 0x0f, 0x8f, 0x00, 0x0f, 0xe0, 0x00, 0x0f, 
	0x8f, 0x80, 0x1f, 0xf0, 0x00, 0x0f, 0xff, 0x80, 0x1f, 0xf0, 0x00, 0x0f, 0xff, 0xc0, 0x1f, 0xf0, 
	0x00, 0x0d, 0xff, 0xc0, 0x1f, 0xf0, 0x00, 0x09, 0xff, 0xc0, 0x1f, 0xf0, 0x00, 0x00, 0xfc, 0xc0, 
	0x1f, 0xf0, 0x00, 0x00, 0xfc, 0xe0, 0x1f, 0xb8, 0x00, 0x00, 0xfc, 0x60, 0x1f, 0xfc, 0x00, 0x00, 
	0xfd, 0xe0, 0x1f, 0xfe, 0x00, 0x00, 0x7d, 0xe0, 0x3f, 0xff, 0x80, 0x00, 0x39, 0xc0, 0x3f, 0xff, 
	0xf0, 0x00, 0x01, 0x80, 0x3f, 0xc0, 0xf0, 0x00, 0x01, 0x00, 0x3f, 0xc0, 0x40, 0x00, 0x03, 0x00, 
	0x3f, 0x80, 0x00, 0x00, 0x07, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x0f, 0x00, 0x3f, 0x80, 0x00, 0x0b, 
	0x03, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x03, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x07, 0x00, 0x0f, 0xc0, 
	0x00, 0x01, 0x87, 0x00, 0x0f, 0xc0, 0x00, 0x01, 0x07, 0x00, 0x07, 0x80, 0x00, 0x00, 0x07, 0x00, 
	0x07, 0x80, 0x00, 0x06, 0x03, 0x00, 0x03, 0xc0, 0x00, 0x02, 0x03, 0x00, 0x03, 0xc0, 0x00, 0x02, 
	0x03, 0x00, 0x03, 0xc0, 0x00, 0x09, 0x83, 0x00, 0x03, 0x80, 0x00, 0x0f, 0xe3, 0x80, 0x07, 0x80, 
	0x00, 0x0f, 0xa1, 0x80, 0x07, 0x80, 0x00, 0x0f, 0x81, 0x80, 0x07, 0xc0, 0x00, 0x0f, 0x81, 0x00, 
	0x07, 0xc0, 0x00, 0x0f, 0x81, 0x00, 0x07, 0xc0, 0x00, 0x0f, 0x81, 0x00, 0x07, 0xc0, 0x00, 0x0f, 
	0xa1, 0x00, 0x0e, 0x40, 0x00, 0x0f, 0xa1, 0x00, 0x06, 0x40, 0x00, 0x0f, 0xf3, 0x80, 0x06, 0x60, 
	0x00, 0x0f, 0xe3, 0x80, 0xf7, 0x3f, 0xb0, 0x0f, 0x83, 0x80, 0xff, 0xff, 0xf8, 0x0f, 0x93, 0xe4, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfc, 0xff, 0xff, 0xff, 0xe1, 0xa0, 0x00
};
// 'frame_05_delay-0', 46x60px
const unsigned char labour05 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 
	0x01, 0x80, 0x00, 0x00, 0x47, 0x00, 0x07, 0xe0, 0x00, 0x01, 0xc7, 0x80, 0x0f, 0xf0, 0x00, 0x03, 
	0xef, 0xc0, 0x0f, 0xf0, 0x00, 0x03, 0xff, 0xe0, 0x1f, 0xf0, 0x00, 0x03, 0xff, 0xe0, 0x1f, 0xf0, 
	0x00, 0x07, 0xff, 0xe0, 0x1f, 0xf8, 0x00, 0x06, 0xff, 0xe0, 0x1f, 0xf8, 0x00, 0x0e, 0x7c, 0xe0, 
	0x1f, 0xf8, 0x00, 0x08, 0x7e, 0x60, 0x1d, 0xfc, 0x00, 0x08, 0x7e, 0x60, 0x19, 0xec, 0x00, 0x02, 
	0x3e, 0xe0, 0x09, 0xec, 0x00, 0x00, 0x3e, 0xe0, 0x00, 0xe4, 0x00, 0x00, 0x1c, 0xe0, 0x1c, 0x76, 
	0x00, 0x00, 0x00, 0xc0, 0x1f, 0xbe, 0x00, 0x00, 0x01, 0x80, 0x3f, 0xce, 0x00, 0x00, 0x03, 0x80, 
	0x3f, 0x83, 0x00, 0x00, 0x06, 0x80, 0x3f, 0x81, 0x00, 0x00, 0x0f, 0x80, 0x1f, 0x80, 0x00, 0x00, 
	0x01, 0x80, 0x0f, 0xc0, 0x80, 0x00, 0x03, 0x80, 0x0f, 0xc0, 0x40, 0x00, 0x03, 0x80, 0x0f, 0xe0, 
	0x00, 0x00, 0x83, 0x80, 0x0f, 0xe0, 0x00, 0x00, 0x83, 0x80, 0x07, 0xf0, 0x00, 0x00, 0x03, 0x80, 
	0x07, 0xf0, 0x00, 0x02, 0x03, 0x80, 0x03, 0xf0, 0x00, 0x03, 0x01, 0x80, 0x03, 0xf0, 0x00, 0x02, 
	0x01, 0x80, 0x01, 0xf0, 0x00, 0x03, 0x81, 0x80, 0x03, 0xf0, 0x00, 0x0f, 0x91, 0x80, 0x03, 0xe0, 
	0x00, 0x0f, 0x91, 0x80, 0x03, 0xe0, 0x00, 0x0f, 0x91, 0x80, 0x03, 0xe0, 0x00, 0x0f, 0x81, 0x80, 
	0x03, 0xa0, 0x00, 0x0f, 0x81, 0x80, 0x03, 0xe0, 0x00, 0x0f, 0x80, 0x80, 0x03, 0x60, 0x00, 0x0f, 
	0x90, 0x80, 0x03, 0x60, 0x00, 0x0f, 0x91, 0x80, 0x03, 0x60, 0x00, 0x0f, 0xf9, 0x80, 0x03, 0x60, 
	0x00, 0x0f, 0xf9, 0xc0, 0xfb, 0xff, 0xe0, 0x0f, 0xc3, 0xc0, 0xfb, 0xff, 0x9c, 0x0f, 0xff, 0xfc, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfc, 0xbf, 0xff, 0xff, 0xff, 0xf8, 0x3c
};
// 'frame_06_delay-0', 46x60px
const unsigned char labour06 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x01, 0xb8, 0x00, 0x04, 0x06, 0x00, 
	0x07, 0xc0, 0x00, 0x03, 0xc7, 0x00, 0x0f, 0xf0, 0x00, 0x03, 0xcf, 0xc0, 0x1f, 0xf8, 0x00, 0x03, 
	0xff, 0xc0, 0x1f, 0xf8, 0x00, 0x07, 0xff, 0xc0, 0x3f, 0xf8, 0x00, 0x07, 0xff, 0xe0, 0x3f, 0xfc, 
	0x00, 0x10, 0xff, 0xe0, 0x3f, 0xfc, 0x00, 0x00, 0xff, 0xe0, 0x3f, 0xfc, 0x00, 0x00, 0x7e, 0xe0, 
	0x3f, 0xee, 0x00, 0x00, 0x7e, 0xe0, 0x7f, 0xee, 0x00, 0x00, 0x7e, 0xe0, 0x7f, 0xee, 0x00, 0x00, 
	0x7e, 0xe0, 0x3f, 0xfc, 0x00, 0x00, 0x7c, 0xe0, 0x1f, 0xf8, 0x00, 0x00, 0x79, 0xc0, 0x1f, 0xf0, 
	0x00, 0x00, 0x01, 0x80, 0x1f, 0xa0, 0x00, 0x00, 0x03, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x07, 0x00, 
	0x3e, 0x40, 0x00, 0x00, 0x0d, 0x80, 0x1f, 0x40, 0x00, 0x01, 0x03, 0x80, 0x1f, 0xc0, 0x00, 0x09, 
	0x03, 0x80, 0x0f, 0xe0, 0x00, 0x00, 0x07, 0x80, 0x0f, 0xe0, 0x00, 0x00, 0x07, 0x00, 0x0f, 0xe0, 
	0x00, 0x01, 0x87, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x07, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x07, 0x00, 
	0x07, 0xf0, 0x00, 0x06, 0x03, 0x00, 0x07, 0xf8, 0x00, 0x02, 0x03, 0x00, 0x03, 0xd8, 0x00, 0x00, 
	0x03, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x23, 0x00, 0x02, 0xf0, 0x00, 0x1f, 0xa3, 0x80, 0x07, 0xf0, 
	0x00, 0x1f, 0xa1, 0x80, 0x07, 0xe0, 0x00, 0x1f, 0xa1, 0x80, 0x07, 0x60, 0x00, 0x1f, 0x81, 0x00, 
	0x07, 0x60, 0x00, 0x1f, 0x81, 0x00, 0x06, 0x60, 0x00, 0x1f, 0x01, 0x00, 0x06, 0x40, 0x00, 0x1f, 
	0x01, 0x00, 0x06, 0x40, 0x00, 0x1f, 0x31, 0x00, 0x06, 0x40, 0x00, 0x1f, 0xf3, 0x00, 0x06, 0x60, 
	0x00, 0x1f, 0xf3, 0x80, 0xf7, 0xff, 0x80, 0x1f, 0x03, 0x80, 0xe7, 0xff, 0x60, 0x1f, 0x03, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x10
};
// 'frame_07_delay-0', 46x60px
const unsigned char labour07 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x80, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0x03, 0x80, 0x00, 0x00, 0xf1, 0xc0, 0x0f, 0xe6, 0x00, 0x01, 0xf7, 0xe0, 0x0f, 0xfe, 0x00, 0x01, 
	0xff, 0xf0, 0x0f, 0xfe, 0x00, 0x03, 0xff, 0xf0, 0x1f, 0xfe, 0x00, 0x00, 0x3f, 0xf0, 0x39, 0xff, 
	0x00, 0x00, 0x3f, 0xf8, 0x30, 0xff, 0x00, 0x00, 0x3f, 0xf8, 0x61, 0xff, 0x00, 0x00, 0x3f, 0xb8, 
	0x71, 0xff, 0x00, 0x00, 0x3f, 0xb8, 0x1c, 0xf0, 0x00, 0x00, 0x3f, 0x38, 0x06, 0xf0, 0x00, 0x00, 
	0x3f, 0x38, 0x02, 0x60, 0x00, 0x00, 0x3f, 0x30, 0x18, 0x48, 0x00, 0x00, 0x0e, 0x70, 0x61, 0x9c, 
	0x00, 0x00, 0x00, 0x60, 0x00, 0xc8, 0x00, 0x00, 0x00, 0xc0, 0x00, 0xe0, 0x00, 0x00, 0x03, 0xc0, 
	0x00, 0xf0, 0x00, 0x00, 0x01, 0xc0, 0x00, 0xe8, 0x00, 0x00, 0x00, 0xc0, 0x00, 0xec, 0x00, 0x02, 
	0x01, 0xc0, 0x00, 0xfc, 0x00, 0x00, 0x01, 0xc0, 0x00, 0xfc, 0x00, 0x00, 0x01, 0xc0, 0x00, 0xfe, 
	0x00, 0x00, 0x01, 0xc0, 0x00, 0x3e, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x36, 0x00, 0x00, 0x01, 0xc0, 
	0x00, 0x36, 0x00, 0x01, 0x01, 0xc0, 0x00, 0x33, 0x00, 0x00, 0x80, 0xc0, 0x00, 0x73, 0x00, 0x01, 
	0x00, 0xc0, 0x00, 0x72, 0x00, 0x01, 0x48, 0xc0, 0x00, 0x60, 0x00, 0x07, 0xc8, 0xc0, 0x00, 0xe4, 
	0x00, 0x07, 0xc8, 0xc0, 0x00, 0xec, 0x00, 0x07, 0xc8, 0xc0, 0x00, 0xc4, 0x00, 0x07, 0xc0, 0x40, 
	0x00, 0x40, 0x00, 0x07, 0xc0, 0x40, 0x00, 0x08, 0x00, 0x07, 0xc0, 0x40, 0x00, 0x88, 0x00, 0x07, 
	0xc8, 0x40, 0x00, 0x80, 0x00, 0x07, 0xcc, 0xc0, 0x00, 0x00, 0x00, 0x07, 0xfc, 0xc0, 0x00, 0x18, 
	0x00, 0x07, 0xf4, 0xe0, 0x01, 0xaf, 0xc0, 0x07, 0xc0, 0xc0, 0x01, 0xef, 0x0e, 0x07, 0xff, 0xfc, 
	0x03, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x87, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfc, 0x00, 0x00, 0x01, 0x01, 0xb0, 0x0c
};
// 'frame_08_delay-0', 46x60px
const unsigned char labour08 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x21, 0x00, 
	0x03, 0x80, 0x00, 0x13, 0xf3, 0xc0, 0x0f, 0xee, 0x00, 0x07, 0xe7, 0xe0, 0x1f, 0xfe, 0x00, 0x0f, 
	0x7f, 0xf0, 0x1f, 0xff, 0x00, 0x00, 0x7f, 0xf0, 0x02, 0x7f, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x79, 
	0x80, 0x00, 0x3f, 0xf0, 0x10, 0xf0, 0x00, 0x00, 0x3f, 0xf0, 0x01, 0xf0, 0x00, 0x00, 0x3f, 0xb0, 
	0x00, 0xfc, 0x00, 0x00, 0x3f, 0x30, 0x00, 0x7c, 0x00, 0x00, 0x3f, 0x30, 0x01, 0xf8, 0x00, 0x00, 
	0x3f, 0x70, 0x00, 0x78, 0x00, 0x00, 0x3f, 0x70, 0x00, 0x7c, 0x00, 0x00, 0x3e, 0x60, 0x01, 0xb8, 
	0x00, 0x00, 0x00, 0xc0, 0x03, 0xf8, 0x00, 0x00, 0x00, 0xc0, 0x01, 0xf0, 0x00, 0x00, 0x03, 0xc0, 
	0x01, 0xe0, 0x00, 0x00, 0x03, 0xc0, 0x01, 0xe8, 0x00, 0x00, 0x01, 0xc0, 0x01, 0xec, 0x00, 0x00, 
	0x01, 0xc0, 0x01, 0xec, 0x00, 0x00, 0x01, 0xc0, 0x00, 0xfc, 0x00, 0x00, 0x01, 0xc0, 0x00, 0xfe, 
	0x00, 0x00, 0x01, 0xc0, 0x00, 0xee, 0x00, 0x00, 0x01, 0x80, 0x00, 0x6e, 0x00, 0x00, 0x01, 0x80, 
	0x00, 0x66, 0x00, 0x03, 0x01, 0x80, 0x00, 0x67, 0x00, 0x01, 0x01, 0x80, 0x00, 0x63, 0x00, 0x00, 
	0x00, 0xc0, 0x00, 0xe3, 0x00, 0x00, 0x08, 0xc0, 0x00, 0xe0, 0x00, 0x07, 0xc8, 0xc0, 0x00, 0xc0, 
	0x00, 0x07, 0xc8, 0xc0, 0x01, 0xcc, 0x00, 0x07, 0xc8, 0xc0, 0x00, 0xcc, 0x00, 0x07, 0xc0, 0xc0, 
	0x00, 0x80, 0x00, 0x07, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x07, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x07, 
	0xc8, 0xc0, 0x01, 0x00, 0x00, 0x07, 0xcc, 0xc0, 0x00, 0x10, 0x00, 0x07, 0xdc, 0xc0, 0x00, 0x10, 
	0x00, 0x07, 0xfc, 0xc0, 0x81, 0x1f, 0xc0, 0x07, 0xc5, 0xf0, 0x71, 0xce, 0x0c, 0x07, 0xff, 0xfc, 
	0x01, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x81, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xc3, 0xff, 0xff, 0xff, 
	0xff, 0xfc, 0x00, 0x00, 0x07, 0x67, 0xf0, 0x3c
};
// 'frame_09_delay-0', 46x60px
const unsigned char labour09 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x07, 0x08, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x01, 0x38, 
	0x00, 0x20, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x30, 0x00, 0x00, 0x01, 0x4e, 0x00, 0x7f, 0xc6, 0x00, 
	0x1f, 0xcf, 0x00, 0x3f, 0xcf, 0x80, 0x1f, 0xff, 0x00, 0x04, 0xff, 0xc0, 0x1f, 0xff, 0x00, 0x00, 
	0xff, 0xc0, 0x1f, 0xf0, 0x00, 0x00, 0xff, 0xe0, 0x0f, 0xf0, 0x00, 0x00, 0xff, 0xe0, 0x0f, 0xf0, 
	0x00, 0x00, 0xff, 0xe0, 0x17, 0xf0, 0x00, 0x00, 0xfe, 0xe0, 0x1f, 0xf0, 0x00, 0x00, 0xfe, 0xe0, 
	0x0f, 0xf0, 0x00, 0x00, 0xfe, 0xe0, 0x0f, 0xf0, 0x00, 0x00, 0xfe, 0x60, 0x03, 0xf0, 0x00, 0x00, 
	0xfe, 0xe0, 0x07, 0xf0, 0x00, 0x00, 0xfc, 0xc0, 0x0f, 0xf0, 0x00, 0x00, 0x3d, 0xc0, 0x0f, 0xf0, 
	0x00, 0x00, 0x01, 0x80, 0x0f, 0xe0, 0x00, 0x00, 0x03, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x07, 0x00, 
	0x07, 0xc0, 0x00, 0x00, 0x07, 0x00, 0x07, 0xa0, 0x00, 0x00, 0x07, 0x00, 0x07, 0xb0, 0x00, 0x00, 
	0x07, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x07, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x07, 0x00, 0x07, 0xf0, 
	0x00, 0x00, 0x07, 0x00, 0x07, 0xf8, 0x00, 0x00, 0x07, 0x00, 0x03, 0xb8, 0x00, 0x00, 0x07, 0x00, 
	0x03, 0xb8, 0x00, 0x04, 0x07, 0x00, 0x03, 0x98, 0x00, 0x06, 0x03, 0x00, 0x03, 0x98, 0x00, 0x00, 
	0x23, 0x00, 0x03, 0x88, 0x00, 0x00, 0x23, 0x00, 0x07, 0x00, 0x00, 0x1f, 0x33, 0x00, 0x07, 0x30, 
	0x00, 0x1f, 0x13, 0x80, 0x0e, 0x30, 0x00, 0x1f, 0x03, 0x00, 0x06, 0x20, 0x00, 0x1f, 0x03, 0x00, 
	0x02, 0x20, 0x00, 0x1f, 0x01, 0x00, 0x02, 0x20, 0x00, 0x1f, 0x01, 0x00, 0x04, 0x40, 0x00, 0x1f, 
	0x11, 0x00, 0x04, 0x00, 0x00, 0x1f, 0x33, 0x00, 0x04, 0x40, 0x00, 0x1f, 0xf3, 0x00, 0x04, 0x40, 
	0x00, 0x1f, 0xf3, 0x80, 0xef, 0x7f, 0x00, 0x1f, 0x87, 0x84, 0xcf, 0xff, 0x30, 0x1f, 0xff, 0xfc, 
	0x8f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfc, 0x00, 0x02, 0x19, 0xbc, 0x80, 0xf8
};
// 'frame_10_delay-0', 46x60px
const unsigned char labour10 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x02, 0x00, 
	0x00, 0x06, 0x00, 0x00, 0x01, 0x80, 0x00, 0x06, 0x00, 0x00, 0x00, 0x60, 0x00, 0x04, 0x00, 0x00, 
	0x00, 0x38, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x18, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x18, 
	0x08, 0x00, 0x00, 0x19, 0x00, 0x30, 0x08, 0x00, 0x00, 0x3f, 0x00, 0x30, 0x3c, 0x00, 0x00, 0x7f, 
	0x00, 0x78, 0x3c, 0x00, 0x00, 0x79, 0x80, 0x7f, 0xbc, 0x00, 0x07, 0xfd, 0x80, 0x1f, 0xde, 0x00, 
	0x0f, 0xf9, 0x80, 0x0f, 0xff, 0x00, 0x0f, 0xff, 0x80, 0x00, 0xff, 0x80, 0x1f, 0xff, 0x80, 0x00, 
	0xff, 0xc0, 0x1f, 0xfe, 0x00, 0x00, 0xff, 0xc0, 0x1f, 0xf0, 0x00, 0x00, 0xff, 0xc0, 0x1f, 0xf0, 
	0x00, 0x00, 0xff, 0xc0, 0x1f, 0xf0, 0x00, 0x00, 0xff, 0xc0, 0x1f, 0xf0, 0x00, 0x00, 0xff, 0xc0, 
	0x1f, 0xf0, 0x00, 0x00, 0xff, 0xc0, 0x0f, 0xe0, 0x00, 0x01, 0xff, 0xe0, 0x0f, 0xe0, 0x00, 0x01, 
	0xff, 0xc0, 0x0f, 0xe0, 0x00, 0x01, 0xff, 0xc0, 0x1f, 0xe0, 0x00, 0x00, 0xff, 0xc0, 0x1f, 0xe0, 
	0x00, 0x00, 0xff, 0x80, 0x1f, 0xe0, 0x00, 0x00, 0x0f, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x0f, 0x00, 
	0x1f, 0x80, 0x00, 0x01, 0x0f, 0x00, 0x1f, 0x80, 0x00, 0x01, 0x87, 0x00, 0x0f, 0xc0, 0x00, 0x09, 
	0x8f, 0x00, 0x0f, 0xc0, 0x00, 0x01, 0x8f, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x8f, 0x00, 0x0f, 0xe0, 
	0x00, 0x01, 0xcf, 0x00, 0x0f, 0xe0, 0x00, 0x01, 0x8f, 0x00, 0x0f, 0xf0, 0x00, 0x08, 0x8e, 0x00, 
	0x0f, 0x70, 0x00, 0x0c, 0x06, 0x00, 0x07, 0x30, 0x00, 0x06, 0x06, 0x00, 0x07, 0x30, 0x00, 0x0f, 
	0x27, 0x00, 0x07, 0x30, 0x00, 0x0f, 0x27, 0x00, 0x07, 0x70, 0x00, 0x9f, 0x37, 0x00, 0x0e, 0xe0, 
	0x00, 0x1f, 0x33, 0x00, 0x0e, 0x60, 0x00, 0x1f, 0x03, 0x00, 0x06, 0x60, 0x00, 0x1f, 0x03, 0x00, 
	0x06, 0x60, 0x00, 0x3f, 0x03, 0x00, 0x04, 0x40, 0x00, 0x1f, 0x03, 0x00, 0x04, 0x40, 0x00, 0x1f, 
	0x33, 0x00, 0x04, 0x40, 0x00, 0x1f, 0x33, 0x00, 0x04, 0x40, 0x00, 0x1f, 0x73, 0x00, 0x0c, 0xc0, 
	0x00, 0x1f, 0xfb, 0x80, 0xef, 0xff, 0x80, 0x1f, 0xff, 0xfc, 0xcf, 0xff, 0xf0, 0x3f, 0xff, 0xfc, 
	0xcf, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfc, 0x0f, 0xff, 0xff, 0xff, 0xeb, 0xfc
};
// 'frame_11_delay-s', 46x60px
const unsigned char labour11 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 
	0x80, 0x00, 0x00, 0x40, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 
	0x00, 0x03, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 
	0x00, 0x02, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x1c, 
	0x04, 0x00, 0x00, 0x00, 0xe0, 0x18, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x1e, 0x1c, 0x00, 0x00, 0x02, 
	0xf0, 0x1f, 0x8c, 0x00, 0x00, 0x0f, 0xd0, 0x07, 0xee, 0x00, 0x01, 0xef, 0xc0, 0x03, 0xef, 0x00, 
	0x03, 0xff, 0xe0, 0x00, 0x6f, 0x80, 0x07, 0xff, 0xe0, 0x00, 0x7f, 0xc0, 0x07, 0xff, 0xe0, 0x00, 
	0x7f, 0xe0, 0x0f, 0xff, 0x60, 0x00, 0x7f, 0xe0, 0x0f, 0xff, 0xe0, 0x00, 0x7f, 0xe0, 0x0f, 0xff, 
	0xe0, 0x00, 0x7f, 0xe0, 0x1f, 0xff, 0xc0, 0x00, 0xff, 0xe0, 0x1f, 0xf0, 0x00, 0x00, 0xff, 0xe0, 
	0x1f, 0xf0, 0x00, 0x00, 0xff, 0xe0, 0x0f, 0xe0, 0x00, 0x00, 0xff, 0xe0, 0x0f, 0xe0, 0x00, 0x00, 
	0xff, 0xe0, 0x1f, 0xe0, 0x00, 0x00, 0xff, 0xe0, 0x1f, 0xe0, 0x00, 0x00, 0x7f, 0xc0, 0x3f, 0xe0, 
	0x00, 0x00, 0x3f, 0x80, 0x3f, 0xc0, 0x00, 0x00, 0x07, 0x80, 0x3f, 0x80, 0x00, 0x00, 0x87, 0x80, 
	0x3f, 0x80, 0x00, 0x00, 0x8f, 0x80, 0x3f, 0x80, 0x00, 0x00, 0x83, 0x80, 0x3f, 0x80, 0x00, 0x0d, 
	0xc7, 0x80, 0x1f, 0xc0, 0x00, 0x00, 0xcf, 0x80, 0x1f, 0xc0, 0x00, 0x00, 0xc7, 0x80, 0x0f, 0xc0, 
	0x00, 0x00, 0xc7, 0x80, 0x0f, 0xe0, 0x00, 0x00, 0xc7, 0x00, 0x0f, 0xe0, 0x00, 0x04, 0xe7, 0x00, 
	0x0f, 0xe0, 0x00, 0x06, 0x23, 0x00, 0x07, 0xf0, 0x00, 0x07, 0x13, 0x00, 0x07, 0xf0, 0x00, 0x0f, 
	0x93, 0x80, 0x07, 0xe0, 0x00, 0x0f, 0x93, 0x80, 0x07, 0xe0, 0x03, 0xff, 0x9b, 0x80, 0x07, 0xe0, 
	0x00, 0xff, 0x93, 0x80, 0x0f, 0xe0, 0x00, 0xff, 0x93, 0x80, 0x0e, 0x60, 0x00, 0xff, 0x81, 0x80, 
	0x0e, 0x60, 0x00, 0x7f, 0x81, 0x80, 0x0e, 0xc0, 0x00, 0x3f, 0x81, 0x80, 0x0e, 0x40, 0x00, 0x3f, 
	0x99, 0x80, 0x04, 0x40, 0x00, 0x1f, 0x99, 0x80, 0x04, 0x40, 0x00, 0x1f, 0xf9, 0x80, 0x64, 0xe0, 
	0x00, 0x1f, 0xff, 0x80, 0xf7, 0xff, 0xf8, 0x1f, 0xff, 0xfc, 0xef, 0xff, 0xfc, 0x1f, 0xff, 0xfc, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc
};


// Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 4608)
const int labours_LEN = 12;
const unsigned char* labours[12] = {
	labour00,
	labour01,
	labour02,
	labour03,
	labour04,
	labour05,
	labour06,
	labour07,
	labour08,
	labour09,
	labour10,
	labour11
};

// smaller 'Modulove_Logo', 28x32px to save resources
const unsigned char Modulove_Logo[] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x0c, 0x18, 0x7e, 0x00, 0x18, 0x05, 0x81, 0x80,
  0x10, 0x07, 0x00, 0xc0, 0x20, 0x06, 0x00, 0x40, 0x20, 0x05, 0x00, 0x20, 0x42, 0x09, 0x00, 0x20,
  0x42, 0x09, 0x00, 0x20, 0x41, 0x09, 0x01, 0x20, 0x41, 0x89, 0x02, 0x20, 0x40, 0x87, 0x0c, 0x20,
  0x20, 0xc7, 0x0c, 0x20, 0x20, 0x7d, 0xf0, 0x40, 0x10, 0x00, 0x00, 0x40, 0x10, 0x00, 0x00, 0x80,
  0x08, 0x00, 0x01, 0x80, 0x04, 0x00, 0x01, 0x00, 0x02, 0x00, 0x02, 0x00, 0x01, 0x00, 0x04, 0x00,
  0x00, 0xc0, 0x0c, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x30, 0x20, 0x00, 0x00, 0x08, 0x40, 0x00,
  0x00, 0x04, 0x80, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x04, 0x80, 0x00,
  0x00, 0x04, 0x40, 0x00, 0x00, 0x04, 0x40, 0x00, 0x00, 0x06, 0xc0, 0x00, 0x00, 0x03, 0x80, 0x00
};


void setup() {
#ifdef ROTATE_PANEL
  hw.config.RotatePanel = false;
#endif
#ifdef REVERSE_ENCODER
  hw.config.ReverseEncoder = true;
#endif

    hw.Init();

    // boot logo animation only on nano for now
#if !defined(LGT8FX_BOARD) && !defined(DISABLE_BOOT_LOGO)
  drawAnimation();
  delay(1200);
#endif


    delay(1200);

    hw.display.clearDisplay();
    hw.display.setTextColor(WHITE);
    hw.display.setCursor(18, 20);
    hw.display.print("Nude Blacksmith");
    hw.display.setCursor(12, 35);
    hw.display.setTextSize(1);
    hw.display.print("Hammering Sequence");
    hw.display.display();

    delay(2000);

    hw.display.clearDisplay();
    hw.display.setTextColor(WHITE);
    hw.display.setCursor(16, 20);
    hw.display.print("Happy Labourday");
    hw.display.setCursor(10, 35);
    hw.display.setTextSize(1);
    hw.display.print("Patch: Omri Cohen");
    hw.display.display();

    delay(2000);
}

void loop() {
    hw.ProcessInputs();

    bool rst = hw.rst.State() == DigitalInput::STATE_RISING;
    bool clk = hw.clk.State() == DigitalInput::STATE_RISING;

    // Reset sequence on reset input
    if (rst) {
        resetSeq();
    }

    // Check for clock pulse and update the lastClockTime
    if (clk) {
        lastClockTime = millis();
        useInternalClock = false;  // Use external clock
        advanceFrame();
    }

    // Check if 3 seconds have passed since the last clock pulse
    if (millis() - lastClockTime > 3000) {
        useInternalClock = true;  // Switch to internal clocking
    }

    // If using internal clock, advance the frame every 66ms for ~15fps
    if (useInternalClock) {
        static unsigned long lastInternalTime = 0;
        if (millis() - lastInternalTime > 66) {
            lastInternalTime = millis();
            advanceFrame();
        }
    }
}

void advanceFrame() {
    framecount1 = (framecount1 + 1) % labours_LEN;
    framecount2 = (framecount2 + 1) % labours_LEN;

    // Flip the toggle state every 4 frames
    if (framecount1 % 4 == 0) {
        toggleState = !toggleState;
    }

    hw.display.clearDisplay();
    hw.display.fillRect(0, 0, 128, 64, BLACK);

    // Randomly flip orientation and invert the image
    drawImageWithEffects(12, 0, labours[framecount1], toggleState);
    drawImageWithEffects(70, 0, labours[framecount2], !toggleState);

// Handle blacksmith hammering states
if (framecount1 == 1) {
    hw.outputs[0].High();   // First blacksmith hammers (output 0)
    hw.outputs[4].Low();    // Ensure second blacksmith is off (output 1)
} else if (framecount1 == 2) {
    hw.outputs[0].Low();    // Ensure first blacksmith is off (output 0)
    hw.outputs[4].High();   // Second blacksmith hammers (output 1)
} else {
    hw.outputs[0].Low();    // Turn off first blacksmith (output 0)
    hw.outputs[4].Low();    // Turn off second blacksmith (output 1)
}

// Handle blacksmith hammering states for the right animation (outputs 3 and 4)
if (framecount2 == 1) {
    hw.outputs[3].High();   // First blacksmith hammers (output 3)
    hw.outputs[1].Low();    // Ensure second blacksmith is off (output 4)
} else if (framecount2 == 2) {
    hw.outputs[3].Low();    // Ensure first blacksmith is off (output 3)
    hw.outputs[1].High();   // Second blacksmith hammers (output 4)
} else {
    hw.outputs[3].Low();    // Turn off first blacksmith (output 3)
    hw.outputs[1].Low();    // Turn off second blacksmith (output 4)
}

    // Toggle outputs 3 and 6 when framecount1 or framecount2 reaches 6
       if (framecount1 == 6 || framecount2 == 3) {
        hw.outputs[2].High();
        hw.outputs[5].Low();
    } else {
        hw.outputs[2].Low();
        hw.outputs[5].High();
    }

    hw.display.display();
}

void drawImageWithEffects(int x, int y, const unsigned char* bitmap, bool invert) {
    if (invert) {
        hw.display.drawBitmap(x, y, bitmap, 46, 60, BLACK);
        hw.display.drawBitmap(x, y, bitmap, 46, 60, WHITE);
    } else {
        hw.display.drawBitmap(x, y, bitmap, 46, 60, WHITE);
    }
}

void drawAnimation() {
    hw.display.fillRect(0, 0, 128, 64, BLACK);
    hw.display.drawBitmap(50, 16, Modulove_Logo, 28, 32, WHITE);
    hw.display.display();
}

void resetSeq() {
    framecount1 = 0;
    framecount2 = 3;  // Reset with the offset
    hw.outputs[0].Low();
    hw.outputs[1].Low();
    hw.outputs[2].Low();
    hw.outputs[3].Low();
    hw.outputs[4].Low();
    hw.outputs[5].Low();
}
